import React, { Component } from 'react';
import axios from 'axios';

import Header from './Header';
import IssuesList from './IssuesList';
import Loader from './Loader';

import '../styles/app.scss';


class App extends Component {
    constructor() {
        super();
        this.state = {
            issues: []
        }
    }

    parseResults(response) {
        window.test = response;
        console.log(response);
        if(response.data) {
            this.setState({ issues: response.data });
        }
    }

    componentDidMount() {
        // let weekAgo = new Date();
        // weekAgo.setDate(weekAgo.getDate() - 7);
        // axios.get('https://api.github.com/repos/facebook/react/issues', {
        //     params: {
        //         since: weekAgo.toISOString(),
        //         sort: 'updated',
        //         state: 'all'
        //     }
        // }).then(this.parseResults.bind(this));
        this.parseResults({"data":[{"url":"https://api.github.com/repos/facebook/react/issues/12732","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12732/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12732/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12732/events","html_url":"https://github.com/facebook/react/issues/12732","id":319562686,"node_id":"MDU6SXNzdWUzMTk1NjI2ODY=","number":12732,"title":"Context API bitmask related questions","user":{"login":"simon998yang","id":18102688,"node_id":"MDQ6VXNlcjE4MTAyNjg4","avatar_url":"https://avatars3.githubusercontent.com/u/18102688?v=4","gravatar_id":"","url":"https://api.github.com/users/simon998yang","html_url":"https://github.com/simon998yang","followers_url":"https://api.github.com/users/simon998yang/followers","following_url":"https://api.github.com/users/simon998yang/following{/other_user}","gists_url":"https://api.github.com/users/simon998yang/gists{/gist_id}","starred_url":"https://api.github.com/users/simon998yang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simon998yang/subscriptions","organizations_url":"https://api.github.com/users/simon998yang/orgs","repos_url":"https://api.github.com/users/simon998yang/repos","events_url":"https://api.github.com/users/simon998yang/events{/privacy}","received_events_url":"https://api.github.com/users/simon998yang/received_events","type":"User","site_admin":false},"labels":[{"id":40929155,"node_id":"MDU6TGFiZWw0MDkyOTE1NQ==","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Question","name":"Type: Question","color":"cc317c","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2018-05-02T13:55:21Z","updated_at":"2018-06-09T10:13:49Z","closed_at":"2018-05-03T00:57:01Z","author_association":"NONE","body":"I'm playing with Context API bitmask feature to bail out unwanted re-render.\r\n\r\nI have a dynamic model ( a JSON object) as context value. By dynamic i meant , the number of keys and structure of the JSON object is unknown. But when the JSON object changed , i know which key is changed. It seems difficult to turn the unknown keys to static pre-defined bitmasks. But I thought such use case is very common, and the bail-out feature should handle it easily by just matching the key. \r\n\r\nAlso I notice default changedBits and observedBits is MAX_SIGNED_31_BIT_INT. Does this mean it has a limitation up to 31 type of context change?"},{"url":"https://api.github.com/repos/facebook/react/issues/12063","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12063/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12063/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12063/events","html_url":"https://github.com/facebook/react/pull/12063","id":290238331,"node_id":"MDExOlB1bGxSZXF1ZXN0MTY0MTU0ODM5","number":12063,"title":"DOM diff and component stack in SSR hydrate mismatch warnings (#10085)","user":{"login":"sompylasar","id":498274,"node_id":"MDQ6VXNlcjQ5ODI3NA==","avatar_url":"https://avatars2.githubusercontent.com/u/498274?v=4","gravatar_id":"","url":"https://api.github.com/users/sompylasar","html_url":"https://github.com/sompylasar","followers_url":"https://api.github.com/users/sompylasar/followers","following_url":"https://api.github.com/users/sompylasar/following{/other_user}","gists_url":"https://api.github.com/users/sompylasar/gists{/gist_id}","starred_url":"https://api.github.com/users/sompylasar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sompylasar/subscriptions","organizations_url":"https://api.github.com/users/sompylasar/orgs","repos_url":"https://api.github.com/users/sompylasar/repos","events_url":"https://api.github.com/users/sompylasar/events{/privacy}","received_events_url":"https://api.github.com/users/sompylasar/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":35,"created_at":"2018-01-21T01:26:08Z","updated_at":"2018-06-09T03:48:26Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/12063","html_url":"https://github.com/facebook/react/pull/12063","diff_url":"https://github.com/facebook/react/pull/12063.diff","patch_url":"https://github.com/facebook/react/pull/12063.patch"},"body":"Renders DOM attributes in the tags mentioned in the warnings. Borrows the idea and partially implementation of `getNodeSignature` from @giles-v https://github.com/facebook/react/pull/12115\r\n\r\nRenders DOM diff and component stack showing visually the location where the hydration failed. Example warning with a diff (see [the `fixtures/ssr`](https://github.com/facebook/react/pull/12063/files#diff-5ec2d35d1f0d9ccc2f3a4a53d0615ba4) and [the tests](https://github.com/facebook/react/pull/12063/files#diff-1ee0c467f9deb87ae13e737c58c4ac34) for more warning examples):\r\n```\r\nWarning: Expected server HTML to contain a matching <div> in <div>.\r\n\r\n  <div>\r\n    {'nested'}\r\n    <!-- -->\r\n    {' '}\r\n    <p>children <b>text</b></p>\r\n+   <div>{['children ', …]}</div>\r\n  </div>\r\n\r\n    in div (at SSRMismatchTest.js:280)\r\n    in div (at SSRMismatchTest.js:275)\r\n    in div (at SSRMismatchTest.js:308)\r\n    in SSRMismatchTest (at App.js:14)\r\n    in div (at App.js:11)\r\n    in body (at Chrome.js:17)\r\n    in html (at Chrome.js:9)\r\n    in Chrome (at App.js:10)\r\n    in App (at index.js:8)\r\n```\r\n<img width=\"480\" alt=\"react-fixtures-ssr-example\" src=\"https://user-images.githubusercontent.com/498274/41187398-263b17e8-6b5d-11e8-8eae-57556babafc9.png\">\r\n\r\n\r\nRequires changes to ReactFiberReconciler interface functions that handle hydration errors to distinguish insertion from replacement and show insertion as one added line in the diff; show replacement as one removed, one added line, at correct position among the parentInstance's DOM children:\r\n- add `index` (use `fiber.index`) to point at which child node the insertion or replacement occurs;\r\n- add `isReplaced` to distinguish insertion from replacement.\r\n\r\n<details>\r\n<summary>\r\nThe latest screen recording from <code>fixtures/ssr</code> (7.8MB – click to expand)\r\n</summary>\r\n\r\n![react-fixtures-ssr-10mb](https://user-images.githubusercontent.com/498274/41187303-53d64b02-6b5b-11e8-9730-729dd2817d12.gif)\r\n\r\n</details>\r\n\r\n------\r\n\r\n<details><summary>Previous revisions</summary>\r\n\r\n```\r\nWarning: Expected server HTML to contain a matching <div>{['children ', …]}</div> in <div>nested<!-- --> <p>children <b>text</b></p></div>.\r\n  <div>\r\n    {'nested'}\r\n    {' '}\r\n    <p>children <b>text</b></p>\r\n+   <div>{['children ', …]}</div>\r\n  </div>\r\n    in div (at SSRMismatchTest.js:280)\r\n    in div (at SSRMismatchTest.js:275)\r\n    in div (at SSRMismatchTest.js:308)\r\n    in SSRMismatchTest (at App.js:14)\r\n    in div (at App.js:11)\r\n    in body (at Chrome.js:17)\r\n    in html (at Chrome.js:9)\r\n    in Chrome (at App.js:10)\r\n    in App (at index.js:8)\r\n```\r\n\r\nExtends the proof-of-concept at commit 6c425e7b90cd61f1124c566b26fa2a5d00261b1b\r\n\r\n![react-ssr-warning-diff](https://user-images.githubusercontent.com/498274/36652198-11bb46fe-1a62-11e8-9fa2-a612827d1463.gif)\r\n\r\n------\r\n\r\n* Added textual component stack to the hydrate mismatch warnings\r\n* Added DOM hydrate mismatch test cases to fixtures/ssr\r\n\r\nExample warning:\r\n```\r\nWarning: Expected server HTML to contain a matching <p> in <div>.\r\n    in p (at SSRMismatchTest.js:40)\r\n    in div (at SSRMismatchTest.js:39)\r\n    in div (at SSRMismatchTest.js:46)\r\n    in SSRMismatchTest (at App.js:14)\r\n    in div (at App.js:11)\r\n    in body (at Chrome.js:17)\r\n    in html (at Chrome.js:9)\r\n    in Chrome (at App.js:10)\r\n    in App (at index.js:8)\r\n```\r\n\r\n![react-ssr-mismatch](https://user-images.githubusercontent.com/498274/35189753-a3e6eefc-fe06-11e7-9a15-216bcf4a6e83.gif)\r\n\r\n</details>\r\n\r\n------\r\n\r\nFixes https://github.com/facebook/react/issues/10085"},{"url":"https://api.github.com/repos/facebook/react/issues/10085","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/10085/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/10085/comments","events_url":"https://api.github.com/repos/facebook/react/issues/10085/events","html_url":"https://github.com/facebook/react/issues/10085","id":239916842,"node_id":"MDU6SXNzdWUyMzk5MTY4NDI=","number":10085,"title":"Nicer Formatting of SSR Validation","user":{"login":"sebmarkbage","id":63648,"node_id":"MDQ6VXNlcjYzNjQ4","avatar_url":"https://avatars2.githubusercontent.com/u/63648?v=4","gravatar_id":"","url":"https://api.github.com/users/sebmarkbage","html_url":"https://github.com/sebmarkbage","followers_url":"https://api.github.com/users/sebmarkbage/followers","following_url":"https://api.github.com/users/sebmarkbage/following{/other_user}","gists_url":"https://api.github.com/users/sebmarkbage/gists{/gist_id}","starred_url":"https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sebmarkbage/subscriptions","organizations_url":"https://api.github.com/users/sebmarkbage/orgs","repos_url":"https://api.github.com/users/sebmarkbage/repos","events_url":"https://api.github.com/users/sebmarkbage/events{/privacy}","received_events_url":"https://api.github.com/users/sebmarkbage/received_events","type":"User","site_admin":false},"labels":[{"id":710332294,"node_id":"MDU6TGFiZWw3MTAzMzIyOTQ=","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Server%20Rendering","name":"Component: Server Rendering","color":"d4c5f9","default":false},{"id":760751171,"node_id":"MDU6TGFiZWw3NjA3NTExNzE=","url":"https://api.github.com/repos/facebook/react/labels/Difficulty:%20challenging","name":"Difficulty: challenging","color":"f2687c","default":false},{"id":121709921,"node_id":"MDU6TGFiZWwxMjE3MDk5MjE=","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request","name":"Type: Feature Request","color":"c7def8","default":false},{"id":717031390,"node_id":"MDU6TGFiZWw3MTcwMzEzOTA=","url":"https://api.github.com/repos/facebook/react/labels/good%20first%20issue","name":"good first issue","color":"6ce26a","default":true}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":29,"created_at":"2017-07-01T00:58:07Z","updated_at":"2018-06-09T03:38:31Z","closed_at":null,"author_association":"MEMBER","body":"The new validation in #10026 only issues a warn for the first difference found in a HTML hydration scenario. Ideally it should instead queue up all the differences and then at the end (commit) issue a single warning with a nicely formatted diff.\r\n\r\n1) Instead of warning add [these warn calls](https://github.com/facebook/react/blob/8d61138186e79e1e719786c8c76186e64b603bd5/src/renderers/dom/fiber/ReactDOMFiberComponent.js#L74-L115) to a global buffer (array, map, set, whatever).\r\n\r\n2) Inside [prepareForCommit](https://github.com/facebook/react/blob/8d61138186e79e1e719786c8c76186e64b603bd5/src/renderers/dom/fiber/ReactDOMFiberEntry.js#L190), issue all the currently batched up warnings as a single message. \r\n\r\n3) Format that message in terms of a JSX diff in a nicely formatted way. With only the relevant nodes (parent and child with changes). Irrelevant child content can be replaced with ellipsis. E.g.\r\n\r\n```\r\n...\r\n<div className=\"unchanged\">\r\n- <div className=\"foo\" />\r\n+ <div className=\"bar\">…</div>\r\n+ <span />\r\n</div>\r\n...\r\n<div className=\"another_unchanged\">\r\n- <span />\r\n</div>\r\n...\r\n```\r\n\r\nThis strategy won't yield perfect results because if we're asynchronously hydrating, and it gets interrupted by another tree, we'll flush a warning before the actual hydrating particular tree is flushed. So we might show a partial diff in that case. This is probably. It's just a warning."},{"url":"https://api.github.com/repos/facebook/react/issues/13000","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/13000/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/13000/comments","events_url":"https://api.github.com/repos/facebook/react/issues/13000/events","html_url":"https://github.com/facebook/react/issues/13000","id":330694007,"node_id":"MDU6SXNzdWUzMzA2OTQwMDc=","number":13000,"title":"react-dom throws \"ReferenceError: requestAnimationFrame is not defined\" in SSR environment since #12931","user":{"login":"sompylasar","id":498274,"node_id":"MDQ6VXNlcjQ5ODI3NA==","avatar_url":"https://avatars2.githubusercontent.com/u/498274?v=4","gravatar_id":"","url":"https://api.github.com/users/sompylasar","html_url":"https://github.com/sompylasar","followers_url":"https://api.github.com/users/sompylasar/followers","following_url":"https://api.github.com/users/sompylasar/following{/other_user}","gists_url":"https://api.github.com/users/sompylasar/gists{/gist_id}","starred_url":"https://api.github.com/users/sompylasar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sompylasar/subscriptions","organizations_url":"https://api.github.com/users/sompylasar/orgs","repos_url":"https://api.github.com/users/sompylasar/repos","events_url":"https://api.github.com/users/sompylasar/events{/privacy}","received_events_url":"https://api.github.com/users/sompylasar/received_events","type":"User","site_admin":false},"labels":[{"id":40929151,"node_id":"MDU6TGFiZWw0MDkyOTE1MQ==","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Bug","name":"Type: Bug","color":"b60205","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-06-08T15:02:08Z","updated_at":"2018-06-09T01:08:20Z","closed_at":"2018-06-09T01:08:20Z","author_association":"CONTRIBUTOR","body":"<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nbug \r\n\r\n**What is the current behavior?**\r\n\r\n<!--\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n-->\r\n\r\nThe https://github.com/facebook/react/pull/12931 change seems to have broken the server-side rendering on `master`: I'm attempting to `yarn start` the `fixtures/ssr` to test https://github.com/facebook/react/pull/12063 and getting the following error from the server-side when I load the `localhost:3000` page:\r\n```\r\nReferenceError: requestAnimationFrame is not defined\r\n    at /__CENSORED__/react/build/node_modules/react-dom/cjs/react-dom.development.js:5232:34\r\n    at Object.<anonymous> (/__CENSORED__/react/build/node_modules/react-dom/cjs/react-dom.development.js:17632:5)\r\n    at Module._compile (module.js:624:30)\r\n    at Module._extensions..js (module.js:635:10)\r\n    at Object.require.extensions.(anonymous function) [as .js] (/__CENSORED__/react/fixtures/ssr/node_modules/babel-register/lib/node.js:152:7)\r\n    at Module.load (module.js:545:32)\r\n    at tryModuleLoad (module.js:508:12)\r\n    at Function.Module._load (module.js:500:3)\r\n    at Module.require (module.js:568:17)\r\n    at require (internal/module.js:11:18)\r\n```\r\nIt points to this line:\r\n```js\r\n// We capture a local reference to any global, in case it gets polyfilled after\r\n// this module is initially evaluated.\r\n// We want to be using a consistent implementation.\r\nconst localRequestAnimationFrame = requestAnimationFrame;\r\n```\r\n\r\n**What is the expected behavior?**\r\n\r\nNo ReferenceError in server-side environment.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nhttps://github.com/facebook/react/commit/79a740c6e32ca300d4e7ff55ab06de172d4237fd (not published at the time of writing)\r\n\r\nNode environment: `fixtures/ssr` during server-side rendering in response to a browser request.\r\n"},{"url":"https://api.github.com/repos/facebook/react/issues/9018","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/9018/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/9018/comments","events_url":"https://api.github.com/repos/facebook/react/issues/9018/events","html_url":"https://github.com/facebook/react/pull/9018","id":208285573,"node_id":"MDExOlB1bGxSZXF1ZXN0MTA2NjM5NjA5","number":9018,"title":"Adding movementX and movementY to synthenticMouseEvent fixes #6723","user":{"login":"jasonwilliams","id":936006,"node_id":"MDQ6VXNlcjkzNjAwNg==","avatar_url":"https://avatars3.githubusercontent.com/u/936006?v=4","gravatar_id":"","url":"https://api.github.com/users/jasonwilliams","html_url":"https://github.com/jasonwilliams","followers_url":"https://api.github.com/users/jasonwilliams/followers","following_url":"https://api.github.com/users/jasonwilliams/following{/other_user}","gists_url":"https://api.github.com/users/jasonwilliams/gists{/gist_id}","starred_url":"https://api.github.com/users/jasonwilliams/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasonwilliams/subscriptions","organizations_url":"https://api.github.com/users/jasonwilliams/orgs","repos_url":"https://api.github.com/users/jasonwilliams/repos","events_url":"https://api.github.com/users/jasonwilliams/events{/privacy}","received_events_url":"https://api.github.com/users/jasonwilliams/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2017-02-16T23:45:02Z","updated_at":"2018-06-08T23:46:16Z","closed_at":null,"author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/9018","html_url":"https://github.com/facebook/react/pull/9018","diff_url":"https://github.com/facebook/react/pull/9018.diff","patch_url":"https://github.com/facebook/react/pull/9018.patch"},"body":"Hi all, im new around here, first PR....\r\n\r\n- Added movementX and movementY feature in accordance to https://w3c.github.io/pointerlock/#widl-MouseEvent-movementX\r\n\r\n- MouseEvent reference updated\r\n\r\nThis will now give full support for movementX and movementY including for browsers which don't support these events.\r\nNot sure how to test this so any help is welcome"},{"url":"https://api.github.com/repos/facebook/react/issues/13005","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/13005/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/13005/comments","events_url":"https://api.github.com/repos/facebook/react/issues/13005/events","html_url":"https://github.com/facebook/react/issues/13005","id":330805573,"node_id":"MDU6SXNzdWUzMzA4MDU1NzM=","number":13005,"title":"Error because of missing key","user":{"login":"ghernando","id":5342043,"node_id":"MDQ6VXNlcjUzNDIwNDM=","avatar_url":"https://avatars1.githubusercontent.com/u/5342043?v=4","gravatar_id":"","url":"https://api.github.com/users/ghernando","html_url":"https://github.com/ghernando","followers_url":"https://api.github.com/users/ghernando/followers","following_url":"https://api.github.com/users/ghernando/following{/other_user}","gists_url":"https://api.github.com/users/ghernando/gists{/gist_id}","starred_url":"https://api.github.com/users/ghernando/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghernando/subscriptions","organizations_url":"https://api.github.com/users/ghernando/orgs","repos_url":"https://api.github.com/users/ghernando/repos","events_url":"https://api.github.com/users/ghernando/events{/privacy}","received_events_url":"https://api.github.com/users/ghernando/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-06-08T21:17:03Z","updated_at":"2018-06-08T22:30:34Z","closed_at":"2018-06-08T22:30:18Z","author_association":"NONE","body":"I'm using Gatsby and am new to both Gatsby and React.\r\nI'm seeing the following warning and would like to remove it.  I've read about the key, and I am trying to apply it, but it doesn't work.\r\n\r\nWarning: Each child in an array or iterator should have a unique \"key\" prop.\r\n\r\n> Check the top-level render call using <CardGroup>. See https://fb.me/react-warning-keys for more information.\r\n>     in Unknown\r\n>     in Unknown (created by ComponentRenderer)\r\n>     in ComponentRenderer (created by Route)\r\n>     in Route (created by DefaultLayout)\r\n>     in div (created by DefaultLayout)\r\n>     in div (created by SidebarPusher)\r\n>     in SidebarPusher (created by DefaultLayout)\r\n> ...\r\n\r\n**MyPage.tsx**\r\nThis is the main page.  It passes a value of slug obtained from GraphQL.\r\n\r\n    export default(props: CardProps) => {\r\n    const mycards = props.data.frontmatter.edges\r\n         .map(({ node }) => {\r\n            const Logo = node.frontmatter.image.children[0] as ImageSharp;\r\n            return (\r\n            <MyCard slug={node.fields.slug} />\r\n          );\r\n       }) ;\r\n    \r\n        ...\r\n        return(\r\n          <Container>\r\n              <Card.Group itemsPerRow={3} stackable={true}>\r\n                   {mycards}\r\n              </Card.Group>\r\n           </Container>\r\n        );\r\n     );\r\n\r\n\r\n**MyCard.tsx**\r\nThis is where the key is specified on the card\r\n\r\n     interface CardProps extends React.HTMLProps<HTMLDivElement> {\r\n       slug: string;\r\n     }\r\n    \r\n     export default ({slug}: CardProps) => {\r\n       return (\r\n           <Card key={slug}>\r\n             <Card.Content>\r\n               <Card.Header>\r\n    ...\r\n             </Card.Content>\r\n           </Card> \r\n        );\r\n     );"},{"url":"https://api.github.com/repos/facebook/react/issues/13001","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/13001/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/13001/comments","events_url":"https://api.github.com/repos/facebook/react/issues/13001/events","html_url":"https://github.com/facebook/react/pull/13001","id":330704587,"node_id":"MDExOlB1bGxSZXF1ZXN0MTkzNjQ5NTA2","number":13001,"title":"Fix react-dom ReferenceError requestAnimationFrame in non-browser env (#13000)","user":{"login":"sompylasar","id":498274,"node_id":"MDQ6VXNlcjQ5ODI3NA==","avatar_url":"https://avatars2.githubusercontent.com/u/498274?v=4","gravatar_id":"","url":"https://api.github.com/users/sompylasar","html_url":"https://github.com/sompylasar","followers_url":"https://api.github.com/users/sompylasar/followers","following_url":"https://api.github.com/users/sompylasar/following{/other_user}","gists_url":"https://api.github.com/users/sompylasar/gists{/gist_id}","starred_url":"https://api.github.com/users/sompylasar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sompylasar/subscriptions","organizations_url":"https://api.github.com/users/sompylasar/orgs","repos_url":"https://api.github.com/users/sompylasar/repos","events_url":"https://api.github.com/users/sompylasar/events{/privacy}","received_events_url":"https://api.github.com/users/sompylasar/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-06-08T15:30:25Z","updated_at":"2018-06-08T22:12:31Z","closed_at":"2018-06-08T22:12:21Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/13001","html_url":"https://github.com/facebook/react/pull/13001","diff_url":"https://github.com/facebook/react/pull/13001.diff","patch_url":"https://github.com/facebook/react/pull/13001.patch"},"body":"The https://github.com/facebook/react/pull/12931 ( https://github.com/facebook/react/commit/79a740c6e32ca300d4e7ff55ab06de172d4237fd ) broke the server-side rendering: in the `fixtures/ssr` the following error appeared from the server-side when `localhost:3000` is requested:\r\n```\r\nReferenceError: requestAnimationFrame is not defined\r\n    at /__CENSORED__/react/build/node_modules/react-dom/cjs/react-dom.development.js:5232:34\r\n    at Object.<anonymous> (/__CENSORED__/react/build/node_modules/react-dom/cjs/react-dom.development.js:17632:5)\r\n    at Module._compile (module.js:624:30)\r\n    at Module._extensions..js (module.js:635:10)\r\n    at Object.require.extensions.(anonymous function) [as .js] (/__CENSORED__/react/fixtures/ssr/node_modules/babel-register/lib/node.js:152:7)\r\n    at Module.load (module.js:545:32)\r\n    at tryModuleLoad (module.js:508:12)\r\n    at Function.Module._load (module.js:500:3)\r\n    at Module.require (module.js:568:17)\r\n    at require (internal/module.js:11:18)\r\n```\r\n\r\nThe exception pointed to this line:\r\n```js\r\n// We capture a local reference to any global, in case it gets polyfilled after\r\n// this module is initially evaluated.\r\n// We want to be using a consistent implementation.\r\nconst localRequestAnimationFrame = requestAnimationFrame;\r\n```\r\n\r\n**Test plan**\r\n\r\n1. In `react` repo root, `yarn && yarn build`.\r\n2. In `fixtures/ssr`, `yarn && yarn start`,\r\n3. In browser, go to `http://localhost:3000`.\r\n4. Observe the fixture page, not the exception message.\r\n"},{"url":"https://api.github.com/repos/facebook/react/issues/13004","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/13004/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/13004/comments","events_url":"https://api.github.com/repos/facebook/react/issues/13004/events","html_url":"https://github.com/facebook/react/issues/13004","id":330789422,"node_id":"MDU6SXNzdWUzMzA3ODk0MjI=","number":13004,"title":"Should i maintain data of component in it;s own state or with redux for complex enterprise applications","user":{"login":"CaptainSadaf","id":30376711,"node_id":"MDQ6VXNlcjMwMzc2NzEx","avatar_url":"https://avatars2.githubusercontent.com/u/30376711?v=4","gravatar_id":"","url":"https://api.github.com/users/CaptainSadaf","html_url":"https://github.com/CaptainSadaf","followers_url":"https://api.github.com/users/CaptainSadaf/followers","following_url":"https://api.github.com/users/CaptainSadaf/following{/other_user}","gists_url":"https://api.github.com/users/CaptainSadaf/gists{/gist_id}","starred_url":"https://api.github.com/users/CaptainSadaf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CaptainSadaf/subscriptions","organizations_url":"https://api.github.com/users/CaptainSadaf/orgs","repos_url":"https://api.github.com/users/CaptainSadaf/repos","events_url":"https://api.github.com/users/CaptainSadaf/events{/privacy}","received_events_url":"https://api.github.com/users/CaptainSadaf/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-06-08T20:15:31Z","updated_at":"2018-06-08T20:22:57Z","closed_at":"2018-06-08T20:22:57Z","author_association":"NONE","body":"Suppose i have four components for one screen or container. component A, component B, component C, component D and four developers are working on four components.\r\n\r\nFirst approach which i can follow is that maintaining the data within own state of component.\r\n2nd approach with redux, i will created reducer for each component and maintaing the data of component with redux.and when i need to send the combine data of all components,simply will combine reducers and send it over server api\r\nWhat approach should i follow?"},{"url":"https://api.github.com/repos/facebook/react/issues/12981","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12981/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12981/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12981/events","html_url":"https://github.com/facebook/react/issues/12981","id":329399935,"node_id":"MDU6SXNzdWUzMjkzOTk5MzU=","number":12981,"title":"Get state's error message when using getDerivedStateFromProps lifecycle even when initializing the state in the constructor. ","user":{"login":"slim-hmidi","id":31925861,"node_id":"MDQ6VXNlcjMxOTI1ODYx","avatar_url":"https://avatars2.githubusercontent.com/u/31925861?v=4","gravatar_id":"","url":"https://api.github.com/users/slim-hmidi","html_url":"https://github.com/slim-hmidi","followers_url":"https://api.github.com/users/slim-hmidi/followers","following_url":"https://api.github.com/users/slim-hmidi/following{/other_user}","gists_url":"https://api.github.com/users/slim-hmidi/gists{/gist_id}","starred_url":"https://api.github.com/users/slim-hmidi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slim-hmidi/subscriptions","organizations_url":"https://api.github.com/users/slim-hmidi/orgs","repos_url":"https://api.github.com/users/slim-hmidi/repos","events_url":"https://api.github.com/users/slim-hmidi/events{/privacy}","received_events_url":"https://api.github.com/users/slim-hmidi/received_events","type":"User","site_admin":false},"labels":[{"id":620368407,"node_id":"MDU6TGFiZWw2MjAzNjg0MDc=","url":"https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information","name":"Resolution: Needs More Information","color":"fffde7","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2018-06-05T10:43:22Z","updated_at":"2018-06-08T19:58:36Z","closed_at":null,"author_association":"NONE","body":"<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n**What is the current behavior?**\r\nI have a component and I'm using the life cycle `componentWillReceiveProps()`:\r\n\r\n```\r\nimport { connect } from 'react-redux';\r\nimport { Component } from 'react';\r\n\r\nclass MyApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentTab: 0,\r\n    };\r\n  }\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (this.state.currentTab !== nextProps.tabNumber) {\r\n      this.setState({ currentTab: nextProps.tabNumber });\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconnect(state => ({\r\n  tabNumber: state.common.editMyAppTabs.tabNumber,\r\n}))(MyApp);\r\n```\r\nI tried to change the `componetWillReceiveProps` by `getDerivedStateFromProps` : \r\n```\r\nimport { connect } from 'react-redux';\r\nimport { Component } from 'react';\r\nclass MyApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentTab: 0,\r\n    };\r\n  }\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (state.currentTab !== props.tabNumber) {\r\n      return { currentTab: props.tabNumber };\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nconnect(state => ({\r\n  tabNumber: state.common.editMyAppTabs.tabNumber,\r\n}))(MyApp);\r\n```\r\nI got this error: \r\n```\r\nDid not properly initialize state during construction. Expected state to be an object, but it was undefined.\r\n\r\nThe above error occurred in the <Translate(ReduxForm)> component:\r\n    in Translate(ReduxForm) (created by WithStyles(Translate(ReduxForm)))\r\n    in WithStyles(Translate(ReduxForm)) (created by Connect(WithStyles(Translate(ReduxForm))))\r\n    in Connect(WithStyles(Translate(ReduxForm))) (created by Route)\r\n    in Route (created by withRouter(Connect(WithStyles(Translate(ReduxForm)))))\r\n    in withRouter(Connect(WithStyles(Translate(ReduxForm)))) (created by MyAppWrapper)\r\n    in MyAppWrapper (created by Route)\r\n    in Route (created by ProtectedRoute)\r\n    in ProtectedRoute (created by Main)\r\n    in Switch (created by Main)\r\n    in main (created by Main)\r\n    in Main (created by AppRoutes)\r\n    in div (created by AppRoutes)\r\n    in AppRoutes (created by App)\r\n    in Router (created by BrowserRouter)\r\n    in BrowserRouter (created by App)\r\n    in Provider (created by App)\r\n    in I18nextProvider (created by App)\r\n    in MuiThemeProvider (created by App)\r\n    in App\r\n\r\n```\r\nand the `state = null`\r\n**What is the expected behavior?**\r\nNo warning and error problem. Does this due to the `connect` function ?\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n**react**: 16.4.0\r\n**OS**: ubtunu 17.10 (64bit)"},{"url":"https://api.github.com/repos/facebook/react/issues/13003","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/13003/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/13003/comments","events_url":"https://api.github.com/repos/facebook/react/issues/13003/events","html_url":"https://github.com/facebook/react/pull/13003","id":330783192,"node_id":"MDExOlB1bGxSZXF1ZXN0MTkzNzA4NDYx","number":13003,"title":"delete a couple of redundant lines","user":{"login":"nateq314","id":1175921,"node_id":"MDQ6VXNlcjExNzU5MjE=","avatar_url":"https://avatars0.githubusercontent.com/u/1175921?v=4","gravatar_id":"","url":"https://api.github.com/users/nateq314","html_url":"https://github.com/nateq314","followers_url":"https://api.github.com/users/nateq314/followers","following_url":"https://api.github.com/users/nateq314/following{/other_user}","gists_url":"https://api.github.com/users/nateq314/gists{/gist_id}","starred_url":"https://api.github.com/users/nateq314/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nateq314/subscriptions","organizations_url":"https://api.github.com/users/nateq314/orgs","repos_url":"https://api.github.com/users/nateq314/repos","events_url":"https://api.github.com/users/nateq314/events{/privacy}","received_events_url":"https://api.github.com/users/nateq314/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-06-08T19:52:53Z","updated_at":"2018-06-08T19:53:08Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/13003","html_url":"https://github.com/facebook/react/pull/13003","diff_url":"https://github.com/facebook/react/pull/13003.diff","patch_url":"https://github.com/facebook/react/pull/13003.patch"},"body":"By definition `root.finishedWork` must already be null at the point that either of these lines are executed. The immediately preceding `if` blocks ensure it. So no need to set to null."},{"url":"https://api.github.com/repos/facebook/react/issues/13002","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/13002/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/13002/comments","events_url":"https://api.github.com/repos/facebook/react/issues/13002/events","html_url":"https://github.com/facebook/react/pull/13002","id":330747767,"node_id":"MDExOlB1bGxSZXF1ZXN0MTkzNjgxNjQz","number":13002,"title":"Added flow type check ReactDOMStringRenderer.","user":{"login":"abhaynikam","id":7736232,"node_id":"MDQ6VXNlcjc3MzYyMzI=","avatar_url":"https://avatars0.githubusercontent.com/u/7736232?v=4","gravatar_id":"","url":"https://api.github.com/users/abhaynikam","html_url":"https://github.com/abhaynikam","followers_url":"https://api.github.com/users/abhaynikam/followers","following_url":"https://api.github.com/users/abhaynikam/following{/other_user}","gists_url":"https://api.github.com/users/abhaynikam/gists{/gist_id}","starred_url":"https://api.github.com/users/abhaynikam/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhaynikam/subscriptions","organizations_url":"https://api.github.com/users/abhaynikam/orgs","repos_url":"https://api.github.com/users/abhaynikam/repos","events_url":"https://api.github.com/users/abhaynikam/events{/privacy}","received_events_url":"https://api.github.com/users/abhaynikam/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-06-08T17:49:10Z","updated_at":"2018-06-08T18:12:22Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/13002","html_url":"https://github.com/facebook/react/pull/13002","diff_url":"https://github.com/facebook/react/pull/13002.diff","patch_url":"https://github.com/facebook/react/pull/13002.patch"},"body":"Trying to add flow for the first time so starting with small code. Related to #11328\r\n\r\nPlease feel free to close PR if this is not required."},{"url":"https://api.github.com/repos/facebook/react/issues/12997","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12997/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12997/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12997/events","html_url":"https://github.com/facebook/react/pull/12997","id":330556908,"node_id":"MDExOlB1bGxSZXF1ZXN0MTkzNTM1OTc4","number":12997,"title":"[RFC] Add init method to ReactClassInterface (#12737).","user":{"login":"dexbol","id":44263,"node_id":"MDQ6VXNlcjQ0MjYz","avatar_url":"https://avatars0.githubusercontent.com/u/44263?v=4","gravatar_id":"","url":"https://api.github.com/users/dexbol","html_url":"https://github.com/dexbol","followers_url":"https://api.github.com/users/dexbol/followers","following_url":"https://api.github.com/users/dexbol/following{/other_user}","gists_url":"https://api.github.com/users/dexbol/gists{/gist_id}","starred_url":"https://api.github.com/users/dexbol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dexbol/subscriptions","organizations_url":"https://api.github.com/users/dexbol/orgs","repos_url":"https://api.github.com/users/dexbol/repos","events_url":"https://api.github.com/users/dexbol/events{/privacy}","received_events_url":"https://api.github.com/users/dexbol/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-06-08T07:57:25Z","updated_at":"2018-06-08T17:03:22Z","closed_at":null,"author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/12997","html_url":"https://github.com/facebook/react/pull/12997","diff_url":"https://github.com/facebook/react/pull/12997.diff","patch_url":"https://github.com/facebook/react/pull/12997.patch"},"body":"#12737"},{"url":"https://api.github.com/repos/facebook/react/issues/12931","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12931/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12931/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12931/events","html_url":"https://github.com/facebook/react/pull/12931","id":327522749,"node_id":"MDExOlB1bGxSZXF1ZXN0MTkxMjk2NzEw","number":12931,"title":"Rename variables to remove references to 'global' global","user":{"login":"flarnie","id":1114467,"node_id":"MDQ6VXNlcjExMTQ0Njc=","avatar_url":"https://avatars2.githubusercontent.com/u/1114467?v=4","gravatar_id":"","url":"https://api.github.com/users/flarnie","html_url":"https://github.com/flarnie","followers_url":"https://api.github.com/users/flarnie/followers","following_url":"https://api.github.com/users/flarnie/following{/other_user}","gists_url":"https://api.github.com/users/flarnie/gists{/gist_id}","starred_url":"https://api.github.com/users/flarnie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/flarnie/subscriptions","organizations_url":"https://api.github.com/users/flarnie/orgs","repos_url":"https://api.github.com/users/flarnie/repos","events_url":"https://api.github.com/users/flarnie/events{/privacy}","received_events_url":"https://api.github.com/users/flarnie/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2018-05-29T23:35:02Z","updated_at":"2018-06-08T15:31:56Z","closed_at":"2018-05-30T00:54:39Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/12931","html_url":"https://github.com/facebook/react/pull/12931","diff_url":"https://github.com/facebook/react/pull/12931.diff","patch_url":"https://github.com/facebook/react/pull/12931.patch"},"body":"**what is the change?:**\r\nIn a recent PR we were referencing some global variables and storing\r\nlocal references to them.\r\n\r\nTo make things more natural, we co-opted the original name of the global\r\nfor our local reference. To make this work with Flow, we get the\r\noriginal reference from 'window.requestAnimationFrame' and assign it to\r\n'const requestAnimationFrame'.\r\n\r\nSometimes React is used in an environment where 'window' is not defined\r\n- in that case we need to use something else, or hide the 'window'\r\nreference somewhere.\r\n\r\nWe opted to use 'global' thinking that Babel transforms would fill that\r\nin with the proper thing.\r\n\r\nBut for some of our fixtures we are not doing that transform on the\r\nbundle.\r\n\r\n**why make this change?:**\r\nI want to unbreak this on master and then investigate more about what we\r\nshould do to fix this.\r\n\r\nWould like to land this quick fix but ultimately would like to avoid using the confusing 'localRequestAnimationFrame' naming.\r\n\r\n**test plan:**\r\nrun `yarn build` and open the fixtures.\r\n\r\n**issue:**\r\n\r\nfixes #12930 \r\n\r\nhttps://github.com/facebook/react/issues/12930"},{"url":"https://api.github.com/repos/facebook/react/issues/12979","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12979/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12979/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12979/events","html_url":"https://github.com/facebook/react/issues/12979","id":329173008,"node_id":"MDU6SXNzdWUzMjkxNzMwMDg=","number":12979,"title":"render() delayed execution based on props -- v15.6.2 working, v. 16.0.0 not working","user":{"login":"HoldOffHunger","id":14262061,"node_id":"MDQ6VXNlcjE0MjYyMDYx","avatar_url":"https://avatars2.githubusercontent.com/u/14262061?v=4","gravatar_id":"","url":"https://api.github.com/users/HoldOffHunger","html_url":"https://github.com/HoldOffHunger","followers_url":"https://api.github.com/users/HoldOffHunger/followers","following_url":"https://api.github.com/users/HoldOffHunger/following{/other_user}","gists_url":"https://api.github.com/users/HoldOffHunger/gists{/gist_id}","starred_url":"https://api.github.com/users/HoldOffHunger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HoldOffHunger/subscriptions","organizations_url":"https://api.github.com/users/HoldOffHunger/orgs","repos_url":"https://api.github.com/users/HoldOffHunger/repos","events_url":"https://api.github.com/users/HoldOffHunger/events{/privacy}","received_events_url":"https://api.github.com/users/HoldOffHunger/received_events","type":"User","site_admin":false},"labels":[{"id":620368407,"node_id":"MDU6TGFiZWw2MjAzNjg0MDc=","url":"https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information","name":"Resolution: Needs More Information","color":"fffde7","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2018-06-04T18:48:16Z","updated_at":"2018-06-08T14:16:00Z","closed_at":null,"author_association":"NONE","body":"<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nBug.\r\n\r\n**What is the current behavior?**\r\n\r\nrender() runs immediately only when provided unique props or on initial, main-parent rendering component, in v. 16.4.0.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nWhen render() executed immediately after being called, it followed a code path through shouldComponentUpdate(), and when it has delayed execution because of non-unique props, it followed a code path through componentWillMount().\r\n\r\nWhen it worked: shouldComponentUpdate() immediately ran after calling ReactDOM.render(childcomponent, parentcomponent);.\r\n\r\nWhen it didn't work: componentWillMount() ran after the current function of the parentcomponent had finished executing.\r\n\r\nPlease let me know if this is insufficient info.\r\n\r\n**What is the expected behavior?**\r\n\r\nIn ReactJS, 15.6.2, render() always runs, and runs immediately, whether its props are unique or not.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nThis was last working in 15.6.2.  It is not working in 16.4.0.\r\n"},{"url":"https://api.github.com/repos/facebook/react/issues/12999","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12999/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12999/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12999/events","html_url":"https://github.com/facebook/react/pull/12999","id":330654495,"node_id":"MDExOlB1bGxSZXF1ZXN0MTkzNjExMDE1","number":12999,"title":"enqueueUpdate() - update expiration time of *both* queues in the case where both are non-empty","user":{"login":"nateq314","id":1175921,"node_id":"MDQ6VXNlcjExNzU5MjE=","avatar_url":"https://avatars0.githubusercontent.com/u/1175921?v=4","gravatar_id":"","url":"https://api.github.com/users/nateq314","html_url":"https://github.com/nateq314","followers_url":"https://api.github.com/users/nateq314/followers","following_url":"https://api.github.com/users/nateq314/following{/other_user}","gists_url":"https://api.github.com/users/nateq314/gists{/gist_id}","starred_url":"https://api.github.com/users/nateq314/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nateq314/subscriptions","organizations_url":"https://api.github.com/users/nateq314/orgs","repos_url":"https://api.github.com/users/nateq314/repos","events_url":"https://api.github.com/users/nateq314/events{/privacy}","received_events_url":"https://api.github.com/users/nateq314/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-06-08T13:16:59Z","updated_at":"2018-06-08T14:14:53Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/12999","html_url":"https://github.com/facebook/react/pull/12999","diff_url":"https://github.com/facebook/react/pull/12999.diff","patch_url":"https://github.com/facebook/react/pull/12999.patch"},"body":"I still have a very shallow understanding of everything but just following along with the code as best I can and it seems that `queue2`'s expiration time needs to be updated when a new update is added? At least in the case where only one is non-empty, that is what happens (both `queue1` and `queue2` expiration times are updated). But not when both are non-empty. This PR fixes that."},{"url":"https://api.github.com/repos/facebook/react/issues/12995","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12995/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12995/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12995/events","html_url":"https://github.com/facebook/react/issues/12995","id":330447029,"node_id":"MDU6SXNzdWUzMzA0NDcwMjk=","number":12995,"title":"can't yield children from a generator in render()","user":{"login":"threepointone","id":18808,"node_id":"MDQ6VXNlcjE4ODA4","avatar_url":"https://avatars2.githubusercontent.com/u/18808?v=4","gravatar_id":"","url":"https://api.github.com/users/threepointone","html_url":"https://github.com/threepointone","followers_url":"https://api.github.com/users/threepointone/followers","following_url":"https://api.github.com/users/threepointone/following{/other_user}","gists_url":"https://api.github.com/users/threepointone/gists{/gist_id}","starred_url":"https://api.github.com/users/threepointone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/threepointone/subscriptions","organizations_url":"https://api.github.com/users/threepointone/orgs","repos_url":"https://api.github.com/users/threepointone/repos","events_url":"https://api.github.com/users/threepointone/events{/privacy}","received_events_url":"https://api.github.com/users/threepointone/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2018-06-07T21:44:55Z","updated_at":"2018-06-08T13:54:08Z","closed_at":null,"author_association":"NONE","body":"<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nbug.\r\n\r\n**What is the current behavior?**\r\n\r\nvia this thread https://twitter.com/aweary/status/1004837394439290880\r\npassing the result of a generator as a child doesn't 'work'. it renders no children, without an error or warning. \r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nrepro - https://codesandbox.io/s/5zp0j8389x\r\n\r\n\r\n**What is the expected behavior?**\r\n\r\nfor the above example, a hundred `<span>`s, numbered 100 -> 1\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n16.x, all browsers \r\n\r\n\r\n(It appears the validation logic drains the iterator, so when we finally try to 'get' the children again, it returns nothing.) "},{"url":"https://api.github.com/repos/facebook/react/issues/12288","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12288/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12288/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12288/events","html_url":"https://github.com/facebook/react/pull/12288","id":300101781,"node_id":"MDExOlB1bGxSZXF1ZXN0MTcxMjc3NDcx","number":12288,"title":"Fix jest/matchers/toWarnDev expected, actual order for jest-diff (#12285)","user":{"login":"sompylasar","id":498274,"node_id":"MDQ6VXNlcjQ5ODI3NA==","avatar_url":"https://avatars2.githubusercontent.com/u/498274?v=4","gravatar_id":"","url":"https://api.github.com/users/sompylasar","html_url":"https://github.com/sompylasar","followers_url":"https://api.github.com/users/sompylasar/followers","following_url":"https://api.github.com/users/sompylasar/following{/other_user}","gists_url":"https://api.github.com/users/sompylasar/gists{/gist_id}","starred_url":"https://api.github.com/users/sompylasar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sompylasar/subscriptions","organizations_url":"https://api.github.com/users/sompylasar/orgs","repos_url":"https://api.github.com/users/sompylasar/repos","events_url":"https://api.github.com/users/sompylasar/events{/privacy}","received_events_url":"https://api.github.com/users/sompylasar/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-02-26T03:55:56Z","updated_at":"2018-06-08T12:19:00Z","closed_at":"2018-06-08T12:18:23Z","author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/12288","html_url":"https://github.com/facebook/react/pull/12288","diff_url":"https://github.com/facebook/react/pull/12288.diff","patch_url":"https://github.com/facebook/react/pull/12288.patch"},"body":"`toWarnDev` calls `jestDiff(a, b)` which calls `diffStrings(a, b)` where by default `a` is annotated as `'Expected'` (green), `b` as `'Received'` (red).\r\n\r\nSo the first argument passed into `jestDiff` should be the expected message, the second should be the actual message.\r\nIt was vice versa previously.\r\n\r\n- https://github.com/facebook/jest/blob/457776b2889a9be1ce8a2c636a23417264a98d99/packages/jest-diff/src/index.js#L54\r\n- https://github.com/facebook/jest/blob/457776b2889a9be1ce8a2c636a23417264a98d99/packages/jest-diff/src/index.js#L93\r\n- https://github.com/facebook/jest/blob/457776b2889a9be1ce8a2c636a23417264a98d99/packages/jest-diff/src/diff_strings.js#L249-L251\r\n\r\nFixes https://github.com/facebook/react/issues/12285"},{"url":"https://api.github.com/repos/facebook/react/issues/12285","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12285/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12285/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12285/events","html_url":"https://github.com/facebook/react/issues/12285","id":300000088,"node_id":"MDU6SXNzdWUzMDAwMDAwODg=","number":12285,"title":"scripts/jest/matchers/toWarnDev: Expected and actual arguments to `jest-diff` are mixed up.","user":{"login":"sompylasar","id":498274,"node_id":"MDQ6VXNlcjQ5ODI3NA==","avatar_url":"https://avatars2.githubusercontent.com/u/498274?v=4","gravatar_id":"","url":"https://api.github.com/users/sompylasar","html_url":"https://github.com/sompylasar","followers_url":"https://api.github.com/users/sompylasar/followers","following_url":"https://api.github.com/users/sompylasar/following{/other_user}","gists_url":"https://api.github.com/users/sompylasar/gists{/gist_id}","starred_url":"https://api.github.com/users/sompylasar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sompylasar/subscriptions","organizations_url":"https://api.github.com/users/sompylasar/orgs","repos_url":"https://api.github.com/users/sompylasar/repos","events_url":"https://api.github.com/users/sompylasar/events{/privacy}","received_events_url":"https://api.github.com/users/sompylasar/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-02-25T05:29:36Z","updated_at":"2018-06-08T12:18:23Z","closed_at":"2018-06-08T12:18:23Z","author_association":"CONTRIBUTOR","body":"**Do you want to request a *feature* or report a *bug*?**\r\n\r\nbug\r\n\r\n**What is the current behavior?**\r\n\r\n`toWarnDev` calls `jestDiff(a, b)` as `jestDiff(normalizedMessage, expectedMessages[0])` and `jestDiff([normalizedMessage], expectedMessages)`:\r\nhttps://github.com/facebook/react/blob/94518b068bf52196abea0c83f4c9926bfe2065c6/scripts/jest/matchers/toWarnDev.js#L49-L57\r\n\r\n[`jestDiff(a, b)`](https://github.com/facebook/jest/blob/457776b2889a9be1ce8a2c636a23417264a98d99/packages/jest-diff/src/index.js#L54) [calls](https://github.com/facebook/jest/blob/457776b2889a9be1ce8a2c636a23417264a98d99/packages/jest-diff/src/index.js#L93) [`diffStrings(a, b)`](https://github.com/facebook/jest/blob/457776b2889a9be1ce8a2c636a23417264a98d99/packages/jest-diff/src/diff_strings.js#L249-L251) where by default `a` is annotated as `'Expected'` (green), `b` as `'Received'` (red).\r\n\r\nhttps://github.com/facebook/jest/blob/457776b2889a9be1ce8a2c636a23417264a98d99/packages/jest-diff/src/diff_strings.js#L86-L90\r\n```js\r\nconst getAnnotation = (options: ?DiffOptions): string =>\r\n  chalk.green('- ' + ((options && options.aAnnotation) || 'Expected')) +\r\n  '\\n' +\r\n  chalk.red('+ ' + ((options && options.bAnnotation) || 'Received')) +\r\n  '\\n\\n';\r\n```\r\n\r\n**What is the expected behavior?**\r\n\r\n`toWarnDev` should pass the expected values into `a`, the actual (received) values into `b` of `jestDiff`:\r\n```js\r\njestDiff(expectedMessages[0], normalizedMessage)\r\n```\r\n```js\r\njestDiff(expectedMessages, [normalizedMessage])\r\n```"},{"url":"https://api.github.com/repos/facebook/react/issues/12996","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12996/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12996/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12996/events","html_url":"https://github.com/facebook/react/pull/12996","id":330498373,"node_id":"MDExOlB1bGxSZXF1ZXN0MTkzNDk0MDc0","number":12996,"title":"revert #11800","user":{"login":"ThaddeusJiang","id":17308201,"node_id":"MDQ6VXNlcjE3MzA4MjAx","avatar_url":"https://avatars3.githubusercontent.com/u/17308201?v=4","gravatar_id":"","url":"https://api.github.com/users/ThaddeusJiang","html_url":"https://github.com/ThaddeusJiang","followers_url":"https://api.github.com/users/ThaddeusJiang/followers","following_url":"https://api.github.com/users/ThaddeusJiang/following{/other_user}","gists_url":"https://api.github.com/users/ThaddeusJiang/gists{/gist_id}","starred_url":"https://api.github.com/users/ThaddeusJiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ThaddeusJiang/subscriptions","organizations_url":"https://api.github.com/users/ThaddeusJiang/orgs","repos_url":"https://api.github.com/users/ThaddeusJiang/repos","events_url":"https://api.github.com/users/ThaddeusJiang/events{/privacy}","received_events_url":"https://api.github.com/users/ThaddeusJiang/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-06-08T02:31:19Z","updated_at":"2018-06-08T12:17:14Z","closed_at":null,"author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/12996","html_url":"https://github.com/facebook/react/pull/12996","diff_url":"https://github.com/facebook/react/pull/12996.diff","patch_url":"https://github.com/facebook/react/pull/12996.patch"},"body":"because #12763\r\n"},{"url":"https://api.github.com/repos/facebook/react/issues/12242","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12242/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12242/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12242/events","html_url":"https://github.com/facebook/react/pull/12242","id":298042431,"node_id":"MDExOlB1bGxSZXF1ZXN0MTY5ODA1MDQz","number":12242,"title":"Regression: React 16 automatically marks first item of a mutliple select as checked","user":{"login":"GarethSmall","id":32682373,"node_id":"MDQ6VXNlcjMyNjgyMzcz","avatar_url":"https://avatars2.githubusercontent.com/u/32682373?v=4","gravatar_id":"","url":"https://api.github.com/users/GarethSmall","html_url":"https://github.com/GarethSmall","followers_url":"https://api.github.com/users/GarethSmall/followers","following_url":"https://api.github.com/users/GarethSmall/following{/other_user}","gists_url":"https://api.github.com/users/GarethSmall/gists{/gist_id}","starred_url":"https://api.github.com/users/GarethSmall/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GarethSmall/subscriptions","organizations_url":"https://api.github.com/users/GarethSmall/orgs","repos_url":"https://api.github.com/users/GarethSmall/repos","events_url":"https://api.github.com/users/GarethSmall/events{/privacy}","received_events_url":"https://api.github.com/users/GarethSmall/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-02-17T22:38:40Z","updated_at":"2018-06-08T11:35:57Z","closed_at":null,"author_association":"NONE","pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/12242","html_url":"https://github.com/facebook/react/pull/12242","diff_url":"https://github.com/facebook/react/pull/12242.diff","patch_url":"https://github.com/facebook/react/pull/12242.patch"},"body":"## Problem\r\n\r\nWhen creating a select element and setting multiple the first element would be selected. This was due to the multiple prop being set after the children we're appended.\r\n\r\nAn non-react example case created by @aweary can been seen here - https://jsfiddle.net/dm6vkq9q/\r\n\r\n## Tradeoffs / Misc\r\n\r\nIn my original solution I added a new hook to set props for just the select element before the children we're appended. This worked only because it was setting just the select props first. An alternative idea proposed was to switch the order of appendChildren > setProps to setProps > appendChildren. this will not work in the instance that we have a defualtValue set for our select input. When we change this order a defaultValue is ignored. There we're also many other tests that broke in this process. Although this is bit of a hacky solution this will not require us to make any dangerous changes to the code base.\r\n\r\n## Solution\r\n\r\nIn postMountWrapper in ReactDOMFiberSelect.js I set selectedIndex for the select element to -1\r\n\r\n## Issue\r\nhttps://github.com/facebook/react/issues/12200\r\n\r\n## Related closed pull requests\r\nhttps://github.com/facebook/react/pull/12240\r\n\r\n@aweary @gaearon "},{"url":"https://api.github.com/repos/facebook/react/issues/12991","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12991/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12991/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12991/events","html_url":"https://github.com/facebook/react/issues/12991","id":330196260,"node_id":"MDU6SXNzdWUzMzAxOTYyNjA=","number":12991,"title":"Explanation on why React is behaving weird when combining setState with animation of scrollLeft of container","user":{"login":"NearAutomata","id":32624319,"node_id":"MDQ6VXNlcjMyNjI0MzE5","avatar_url":"https://avatars3.githubusercontent.com/u/32624319?v=4","gravatar_id":"","url":"https://api.github.com/users/NearAutomata","html_url":"https://github.com/NearAutomata","followers_url":"https://api.github.com/users/NearAutomata/followers","following_url":"https://api.github.com/users/NearAutomata/following{/other_user}","gists_url":"https://api.github.com/users/NearAutomata/gists{/gist_id}","starred_url":"https://api.github.com/users/NearAutomata/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NearAutomata/subscriptions","organizations_url":"https://api.github.com/users/NearAutomata/orgs","repos_url":"https://api.github.com/users/NearAutomata/repos","events_url":"https://api.github.com/users/NearAutomata/events{/privacy}","received_events_url":"https://api.github.com/users/NearAutomata/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2018-06-07T09:45:36Z","updated_at":"2018-06-08T08:19:30Z","closed_at":null,"author_association":"NONE","body":"**Do you want to request a *feature* or report a *bug*?** Bug\r\n\r\n**What is the current behavior?**\r\nIn an application I am currently developing I have multiple cards in a carousel that can be scrolled card by card. Those cards themselves can have overflowing content and have scrollbars in that case. Unfortunately though, depending on the number of cards and content I have an issue wherein scrolling the mousewheel does not scroll the card content after scrolling through the carousel. One such manifestation of the bug is shown in this gif:\r\n\r\n![xldwovv](https://user-images.githubusercontent.com/32624319/41091846-d3dd4d1a-6a47-11e8-9570-cf30a1811673.gif)\r\n\r\nI can scroll the card content, move forward and back and all of a sudden the second card content cannot be scrolled anymore. When moving the mouse outside of the carousel and back (without actually clicking) it works again.\r\n\r\nAt times it felt as if React/the browser thinks the card is still at its old place and thus doesn't perform the default behavior when trying to scroll, that is relaying the default scroll behaviour to the card itself.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nA MWE repo can be found here: https://gitlab.com/NearAutomata/react-scrolling-mwe\r\nPlease use `npm install && npm run build` and open the `Index.html` in the `Build folder to check that issue for yourself. In Chrome and Electron the behaviour seen in the gif is occuring to me.\r\n\r\n---\r\n\r\nThe corresponding block in the source file with the issue is here: https://gitlab.com/NearAutomata/react-scrolling-mwe/blob/master/Source/Components/Launcher.tsx#L228-230\r\n\r\nIn the first iteration of my code when clicking on the button I was calling `setState` then the `scrollTo` animation. React apparently expects the old coords of the elements. To my surprise `setState({ ... }, () => { scrollTo(...); })` did not work either. I expected the animation to be called right after React updates and re-renders everything. Conversely, adding a callback to my animation like `scrollTo(..., () => { setState({ ... }); })` seems to work to prevent any internal mismatch of positions.\r\n\r\nI'd like to know whether you can explain why the second variant with `setState({ ... }, () => { scrollTo(...); })` isn't working as expected and why React is having issue with scrolled elements."},{"url":"https://api.github.com/repos/facebook/react/issues/12989","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12989/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12989/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12989/events","html_url":"https://github.com/facebook/react/issues/12989","id":330078193,"node_id":"MDU6SXNzdWUzMzAwNzgxOTM=","number":12989,"title":"Consider removing Mobile Safari empty onclick hack","user":{"login":"gaearon","id":810438,"node_id":"MDQ6VXNlcjgxMDQzOA==","avatar_url":"https://avatars0.githubusercontent.com/u/810438?v=4","gravatar_id":"","url":"https://api.github.com/users/gaearon","html_url":"https://github.com/gaearon","followers_url":"https://api.github.com/users/gaearon/followers","following_url":"https://api.github.com/users/gaearon/following{/other_user}","gists_url":"https://api.github.com/users/gaearon/gists{/gist_id}","starred_url":"https://api.github.com/users/gaearon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gaearon/subscriptions","organizations_url":"https://api.github.com/users/gaearon/orgs","repos_url":"https://api.github.com/users/gaearon/repos","events_url":"https://api.github.com/users/gaearon/events{/privacy}","received_events_url":"https://api.github.com/users/gaearon/received_events","type":"User","site_admin":false},"labels":[{"id":127893911,"node_id":"MDU6TGFiZWwxMjc4OTM5MTE=","url":"https://api.github.com/repos/facebook/react/labels/Component:%20DOM","name":"Component: DOM","color":"fef2c0","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-06-07T00:36:14Z","updated_at":"2018-06-08T07:55:31Z","closed_at":null,"author_association":"MEMBER","body":"See https://github.com/facebook/react/issues/238 and https://github.com/facebook/react/pull/1536 for historical context.\r\n\r\nIs that still relevant? The code is here:\r\n\r\nhttps://github.com/facebook/react/blob/52fbe7612e0527b8c86decac519c344626f6bd72/packages/react-dom/src/client/ReactDOMFiberComponent.js#L244-L245\r\n\r\nEven if it's relevant, can we just feature test it, and not do this hack on other browsers? Seems like a waste of memory for event handlers (even though the function is the same every time)."},{"url":"https://api.github.com/repos/facebook/react/issues/10441","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/10441/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/10441/comments","events_url":"https://api.github.com/repos/facebook/react/issues/10441/events","html_url":"https://github.com/facebook/react/issues/10441","id":249669043,"node_id":"MDU6SXNzdWUyNDk2NjkwNDM=","number":10441,"title":"Cross-origin error passed to componentDidCatch incorrectly","user":{"login":"bvaughn","id":29597,"node_id":"MDQ6VXNlcjI5NTk3","avatar_url":"https://avatars0.githubusercontent.com/u/29597?v=4","gravatar_id":"","url":"https://api.github.com/users/bvaughn","html_url":"https://github.com/bvaughn","followers_url":"https://api.github.com/users/bvaughn/followers","following_url":"https://api.github.com/users/bvaughn/following{/other_user}","gists_url":"https://api.github.com/users/bvaughn/gists{/gist_id}","starred_url":"https://api.github.com/users/bvaughn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bvaughn/subscriptions","organizations_url":"https://api.github.com/users/bvaughn/orgs","repos_url":"https://api.github.com/users/bvaughn/repos","events_url":"https://api.github.com/users/bvaughn/events{/privacy}","received_events_url":"https://api.github.com/users/bvaughn/received_events","type":"User","site_admin":false},"labels":[{"id":127893911,"node_id":"MDU6TGFiZWwxMjc4OTM5MTE=","url":"https://api.github.com/repos/facebook/react/labels/Component:%20DOM","name":"Component: DOM","color":"fef2c0","default":false},{"id":710722093,"node_id":"MDU6TGFiZWw3MTA3MjIwOTM=","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Needs%20Investigation","name":"Type: Needs Investigation","color":"fbca04","default":false}],"state":"open","locked":false,"assignee":{"login":"bvaughn","id":29597,"node_id":"MDQ6VXNlcjI5NTk3","avatar_url":"https://avatars0.githubusercontent.com/u/29597?v=4","gravatar_id":"","url":"https://api.github.com/users/bvaughn","html_url":"https://github.com/bvaughn","followers_url":"https://api.github.com/users/bvaughn/followers","following_url":"https://api.github.com/users/bvaughn/following{/other_user}","gists_url":"https://api.github.com/users/bvaughn/gists{/gist_id}","starred_url":"https://api.github.com/users/bvaughn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bvaughn/subscriptions","organizations_url":"https://api.github.com/users/bvaughn/orgs","repos_url":"https://api.github.com/users/bvaughn/repos","events_url":"https://api.github.com/users/bvaughn/events{/privacy}","received_events_url":"https://api.github.com/users/bvaughn/received_events","type":"User","site_admin":false},"assignees":[{"login":"bvaughn","id":29597,"node_id":"MDQ6VXNlcjI5NTk3","avatar_url":"https://avatars0.githubusercontent.com/u/29597?v=4","gravatar_id":"","url":"https://api.github.com/users/bvaughn","html_url":"https://github.com/bvaughn","followers_url":"https://api.github.com/users/bvaughn/followers","following_url":"https://api.github.com/users/bvaughn/following{/other_user}","gists_url":"https://api.github.com/users/bvaughn/gists{/gist_id}","starred_url":"https://api.github.com/users/bvaughn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bvaughn/subscriptions","organizations_url":"https://api.github.com/users/bvaughn/orgs","repos_url":"https://api.github.com/users/bvaughn/repos","events_url":"https://api.github.com/users/bvaughn/events{/privacy}","received_events_url":"https://api.github.com/users/bvaughn/received_events","type":"User","site_admin":false}],"milestone":null,"comments":54,"created_at":"2017-08-11T15:25:18Z","updated_at":"2018-06-08T07:52:53Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"tl;dr React is passing \"A cross-origin error was thrown\" to `componentDidCatch` when there are no cross-origin scripts.\r\n\r\nSee [this discussion thread](https://github.com/facebook/react/pull/10353#issuecomment-321528685) and [this repro case](https://github.com/tessin/tessin-mini).\r\n\r\nI was able to confirm the behavior. A quick look at `onError` showed a null `event.error`."},{"url":"https://api.github.com/repos/facebook/react/issues/10320","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/10320/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/10320/comments","events_url":"https://api.github.com/repos/facebook/react/issues/10320/events","html_url":"https://github.com/facebook/react/issues/10320","id":246450553,"node_id":"MDU6SXNzdWUyNDY0NTA1NTM=","number":10320,"title":"Uncaught TypeError: this.updater.enqueueCallback is not a function when using setState callback","user":{"login":"wojtekmaj","id":5426427,"node_id":"MDQ6VXNlcjU0MjY0Mjc=","avatar_url":"https://avatars2.githubusercontent.com/u/5426427?v=4","gravatar_id":"","url":"https://api.github.com/users/wojtekmaj","html_url":"https://github.com/wojtekmaj","followers_url":"https://api.github.com/users/wojtekmaj/followers","following_url":"https://api.github.com/users/wojtekmaj/following{/other_user}","gists_url":"https://api.github.com/users/wojtekmaj/gists{/gist_id}","starred_url":"https://api.github.com/users/wojtekmaj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wojtekmaj/subscriptions","organizations_url":"https://api.github.com/users/wojtekmaj/orgs","repos_url":"https://api.github.com/users/wojtekmaj/repos","events_url":"https://api.github.com/users/wojtekmaj/events{/privacy}","received_events_url":"https://api.github.com/users/wojtekmaj/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2017-07-28T20:25:27Z","updated_at":"2018-06-08T07:07:23Z","closed_at":"2017-07-29T00:19:56Z","author_association":"NONE","body":"**Do you want to request a *feature* or report a *bug*?**\r\n\r\nBug on a beta version.\r\n\r\n**What is the current behavior?**\r\n\r\n![image](https://user-images.githubusercontent.com/5426427/28733836-40316b42-73de-11e7-914e-6d196201c2da.png)\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem via https://jsfiddle.net or similar (template: https://jsfiddle.net/84v837e9/).**\r\n\r\nIn my Component, I used a pretty simple piece of code:\r\n\r\n```js\r\n  doSomeMore = () => {\r\n    // Do stuff\r\n  }\r\n\r\n  doSomething = (value) => {\r\n    this.setState({ value }, this.doSomeMore );\r\n  }\r\n```\r\n\r\nfiring doSomething() causes this error.\r\n\r\n**What is the expected behavior?**\r\n\r\nI expect this.doSomeMore function to be called after this.setState from this.doSomething. \r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nVersion of React: 16.0.0-beta.2\r\nI have tested several other versions and I can confirm that:\r\n* This bug also appears on 16.0.0-beta.1\r\n* This bug does NOT appear on 15.6.1"},{"url":"https://api.github.com/repos/facebook/react/issues/12990","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12990/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12990/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12990/events","html_url":"https://github.com/facebook/react/issues/12990","id":330122318,"node_id":"MDU6SXNzdWUzMzAxMjIzMTg=","number":12990,"title":"trigger parent function from nested child","user":{"login":"murthybr","id":39536165,"node_id":"MDQ6VXNlcjM5NTM2MTY1","avatar_url":"https://avatars2.githubusercontent.com/u/39536165?v=4","gravatar_id":"","url":"https://api.github.com/users/murthybr","html_url":"https://github.com/murthybr","followers_url":"https://api.github.com/users/murthybr/followers","following_url":"https://api.github.com/users/murthybr/following{/other_user}","gists_url":"https://api.github.com/users/murthybr/gists{/gist_id}","starred_url":"https://api.github.com/users/murthybr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/murthybr/subscriptions","organizations_url":"https://api.github.com/users/murthybr/orgs","repos_url":"https://api.github.com/users/murthybr/repos","events_url":"https://api.github.com/users/murthybr/events{/privacy}","received_events_url":"https://api.github.com/users/murthybr/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-06-07T05:29:33Z","updated_at":"2018-06-08T07:05:20Z","closed_at":"2018-06-07T18:05:12Z","author_association":"NONE","body":"Hello Team\r\nI am getting up to speed on react. Have a following query: \r\n\r\nWe have Parent Component with a Child. the child has an another child component. The structure is Parent component >1st leve Child Component (Test1)>2nd level Child Component(Test2).\r\nwith in parent component have a call back function   handler=()=> {this.setState({messageShown: true});}\r\npassing the handler function as prop to child :<Test1 action={this.handler}/>. Wiithin Test1 there is child component <Test2>. Within the Test2 component, there is a button. is there any way to trigger the Parent function :handler() from the Test2 Component.\r\nAnypointers would be great\r\n\r\n\r\n"},{"url":"https://api.github.com/repos/facebook/react/issues/11496","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/11496/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/11496/comments","events_url":"https://api.github.com/repos/facebook/react/issues/11496/events","html_url":"https://github.com/facebook/react/issues/11496","id":272400297,"node_id":"MDU6SXNzdWUyNzI0MDAyOTc=","number":11496,"title":"SetState callback called before component state is updated in React Shallow Renderer","user":{"login":"bdwain","id":3982094,"node_id":"MDQ6VXNlcjM5ODIwOTQ=","avatar_url":"https://avatars1.githubusercontent.com/u/3982094?v=4","gravatar_id":"","url":"https://api.github.com/users/bdwain","html_url":"https://github.com/bdwain","followers_url":"https://api.github.com/users/bdwain/followers","following_url":"https://api.github.com/users/bdwain/following{/other_user}","gists_url":"https://api.github.com/users/bdwain/gists{/gist_id}","starred_url":"https://api.github.com/users/bdwain/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bdwain/subscriptions","organizations_url":"https://api.github.com/users/bdwain/orgs","repos_url":"https://api.github.com/users/bdwain/repos","events_url":"https://api.github.com/users/bdwain/events{/privacy}","received_events_url":"https://api.github.com/users/bdwain/received_events","type":"User","site_admin":false},"labels":[{"id":588833528,"node_id":"MDU6TGFiZWw1ODg4MzM1Mjg=","url":"https://api.github.com/repos/facebook/react/labels/Difficulty:%20medium","name":"Difficulty: medium","color":"fbca04","default":false},{"id":40929151,"node_id":"MDU6TGFiZWw0MDkyOTE1MQ==","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Bug","name":"Type: Bug","color":"b60205","default":false},{"id":725156255,"node_id":"MDU6TGFiZWw3MjUxNTYyNTU=","url":"https://api.github.com/repos/facebook/react/labels/good%20first%20issue%20(taken)","name":"good first issue (taken)","color":"b60205","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":18,"created_at":"2017-11-09T00:35:37Z","updated_at":"2018-06-08T06:13:24Z","closed_at":"2017-11-28T15:08:09Z","author_association":"NONE","body":"**Do you want to request a *feature* or report a *bug*?**\r\nreport a bug\r\n\r\n**What is the current behavior?**\r\nWhen I call setState with a callback in a test using react shallow renderer (via enzyme), the callback gets called and `this.state` is still the old state.\r\n\r\nEDIT: This seems limited to componentWillMount\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem via https://jsfiddle.net or similar (template for React 16: https://jsfiddle.net/Luktwrdm/, template for React 15: https://jsfiddle.net/hmbg7e9w/).**\r\n\r\nEDIT: Reproduce with this https://github.com/bdwain/setstate-callback-bug\r\n\r\n**What is the expected behavior?**\r\nWhen the setState callback gets called, it should have access to the new state.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nVersion 16.\r\nIt worked in v15 with enzyme 2.\r\n\r\nEDIT: I think this is because in componentWillMount, [this line](https://github.com/facebook/react/blob/master/packages/react-test-renderer/src/ReactShallowRenderer.js#L67) causes the render method in the shallow wrapper to return early, before it updates the state."},{"url":"https://api.github.com/repos/facebook/react/issues/12763","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12763/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12763/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12763/events","html_url":"https://github.com/facebook/react/issues/12763","id":321131535,"node_id":"MDU6SXNzdWUzMjExMzE1MzU=","number":12763,"title":"`priorFocusedElem.focus()` throws in IE11","user":{"login":"kristiandupont","id":847742,"node_id":"MDQ6VXNlcjg0Nzc0Mg==","avatar_url":"https://avatars2.githubusercontent.com/u/847742?v=4","gravatar_id":"","url":"https://api.github.com/users/kristiandupont","html_url":"https://github.com/kristiandupont","followers_url":"https://api.github.com/users/kristiandupont/followers","following_url":"https://api.github.com/users/kristiandupont/following{/other_user}","gists_url":"https://api.github.com/users/kristiandupont/gists{/gist_id}","starred_url":"https://api.github.com/users/kristiandupont/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kristiandupont/subscriptions","organizations_url":"https://api.github.com/users/kristiandupont/orgs","repos_url":"https://api.github.com/users/kristiandupont/repos","events_url":"https://api.github.com/users/kristiandupont/events{/privacy}","received_events_url":"https://api.github.com/users/kristiandupont/received_events","type":"User","site_admin":false},"labels":[{"id":127893911,"node_id":"MDU6TGFiZWwxMjc4OTM5MTE=","url":"https://api.github.com/repos/facebook/react/labels/Component:%20DOM","name":"Component: DOM","color":"fef2c0","default":false},{"id":178761159,"node_id":"MDU6TGFiZWwxNzg3NjExNTk=","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Regression","name":"Type: Regression","color":"e11d21","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2018-05-08T10:34:22Z","updated_at":"2018-06-08T02:17:34Z","closed_at":null,"author_association":"NONE","body":"<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n\r\n**What is the current behavior?**\r\nWe have an `onClick` handler on an SVG element. The handler sets a state property that causes the element to be hidden (via CSS). This makes IE11 throw on this line: \r\nhttps://github.com/facebook/react/blob/52eb59dda2eb0d9afe3a18aacd6142c1d2f7ee25/packages/react-dom/src/client/ReactInputSelection.js#L72\r\n\r\nIt seems that #11800 removed a try/catch protection for this. \r\n\r\nI am working around the problem by stubbing focus like this:\r\n```javascript\r\nif (typeof SVGElement.prototype.focus === 'undefined') { SVGElement.prototype.focus = function () {}; }\r\n```\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nWorked in 16.2.2"},{"url":"https://api.github.com/repos/facebook/react/issues/9809","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/9809/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/9809/comments","events_url":"https://api.github.com/repos/facebook/react/issues/9809/events","html_url":"https://github.com/facebook/react/issues/9809","id":232067946,"node_id":"MDU6SXNzdWUyMzIwNjc5NDY=","number":9809,"title":"touchstart preventDefault() does not prevent click event.","user":{"login":"benwiley4000","id":13558253,"node_id":"MDQ6VXNlcjEzNTU4MjUz","avatar_url":"https://avatars2.githubusercontent.com/u/13558253?v=4","gravatar_id":"","url":"https://api.github.com/users/benwiley4000","html_url":"https://github.com/benwiley4000","followers_url":"https://api.github.com/users/benwiley4000/followers","following_url":"https://api.github.com/users/benwiley4000/following{/other_user}","gists_url":"https://api.github.com/users/benwiley4000/gists{/gist_id}","starred_url":"https://api.github.com/users/benwiley4000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benwiley4000/subscriptions","organizations_url":"https://api.github.com/users/benwiley4000/orgs","repos_url":"https://api.github.com/users/benwiley4000/repos","events_url":"https://api.github.com/users/benwiley4000/events{/privacy}","received_events_url":"https://api.github.com/users/benwiley4000/received_events","type":"User","site_admin":false},"labels":[{"id":127893911,"node_id":"MDU6TGFiZWwxMjc4OTM5MTE=","url":"https://api.github.com/repos/facebook/react/labels/Component:%20DOM","name":"Component: DOM","color":"fef2c0","default":false},{"id":710722093,"node_id":"MDU6TGFiZWw3MTA3MjIwOTM=","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Needs%20Investigation","name":"Type: Needs Investigation","color":"fbca04","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2017-05-29T17:12:21Z","updated_at":"2018-06-08T00:25:58Z","closed_at":null,"author_association":"NONE","body":"**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n\r\n**What is the current behavior?**\r\nCalling `e.preventDefault()` on a synthetic `onTouchStart` event fails to [prevent the `click` event](https://w3c.github.io/touch-events/#h-note5). I also tried `e.nativeEvent.preventDefault()`, but this didn't make any difference.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem via https://jsfiddle.net or similar (template: https://jsfiddle.net/84v837e9/).**\r\n\r\nHere's a div which is supposed to handle a hover case but **not** process a click the first time is is tapped via touch (click on desktop is fine). However tapping with touch (on a mobile device or using dev tools touch emulation) will trigger both `touchstart` and `click` immediately.\r\n\r\n[jsfiddle](http://jsfiddle.net/69z2wepo/79757/)\r\n```javascript\r\nconst style = {\r\n  background: 'red',\r\n  width: 100,\r\n  height: 100,\r\n  // to ensure `touchstart` `preventDefault()` is allowed on mobile\r\n  touchAction: 'none'\r\n};\r\n\r\nclass SomeButton extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      hover: false,\r\n      click: false\r\n    };\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div\r\n        style={style}\r\n        onMouseEnter={() => this.setState({ hover: true })}\r\n        onClick={() => this.setState({ click: true })}\r\n        onTouchStart={e => {\r\n          if (!this.state.hover) {\r\n            e.preventDefault(); // doesn't work!\r\n            this.setState({ hover: true });\r\n          }\r\n        }}\r\n      >\r\n        {this.state.hover && 'hover!'}\r\n        {this.state.click && 'click!'}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n```\r\n\r\nHowever if I move the `touchstart` listener to `componentDidMount` and use the normal DOM API, everything works:\r\n\r\n[jsfiddle](http://jsfiddle.net/69z2wepo/79759/)\r\n```javascript\r\n// ...\r\nclass SomeButton extends React.Component {\r\n  constructor (props) {\r\n    // ...\r\n  }\r\n  \r\n  componentDidMount () {\r\n    this.elem.addEventListener('touchstart', e => {\r\n      if (!this.state.hover) {\r\n        e.preventDefault(); // WORKS!\r\n        this.setState({ hover: true });\r\n      }\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div\r\n        ref={elem => this.elem = elem}\r\n        { /* ... (removed onTouchStart) ... */}\r\n      >\r\n        {/* ... */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n```\r\n\r\n**What is the expected behavior?**\r\nThe first time a `touchstart` is processed, we only treat it as a hover, and wait to process the `click` event until after the next `touchstart`. If the pointer is a mouse, both events can be processed at once.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nReact 15.5.4. Not sure about previous React versions. Chrome for Android, Chrome for Mac emulating touch, Firefox for Mac emulating touch.\r\n"},{"url":"https://api.github.com/repos/facebook/react/issues/12898","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/12898/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/12898/comments","events_url":"https://api.github.com/repos/facebook/react/issues/12898/events","html_url":"https://github.com/facebook/react/issues/12898","id":326103472,"node_id":"MDU6SXNzdWUzMjYxMDM0NzI=","number":12898,"title":"The minor release of 16.4 causes BREAKING changes in getDerivedStateFromProps","user":{"login":"goyney","id":1015040,"node_id":"MDQ6VXNlcjEwMTUwNDA=","avatar_url":"https://avatars2.githubusercontent.com/u/1015040?v=4","gravatar_id":"","url":"https://api.github.com/users/goyney","html_url":"https://github.com/goyney","followers_url":"https://api.github.com/users/goyney/followers","following_url":"https://api.github.com/users/goyney/following{/other_user}","gists_url":"https://api.github.com/users/goyney/gists{/gist_id}","starred_url":"https://api.github.com/users/goyney/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/goyney/subscriptions","organizations_url":"https://api.github.com/users/goyney/orgs","repos_url":"https://api.github.com/users/goyney/repos","events_url":"https://api.github.com/users/goyney/events{/privacy}","received_events_url":"https://api.github.com/users/goyney/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":84,"created_at":"2018-05-24T12:41:06Z","updated_at":"2018-06-07T21:37:13Z","closed_at":"2018-05-25T16:51:54Z","author_association":"NONE","body":"According to semver, only non-breaking changes are supposed to go into minor and patch version releases. With the release of 16.4, you have made breaking changes to `getDerivedStateFromProps`. Our entire codebase, running perfectly on 16.3.2 is a dumpster fire as soon as we raise that dependency to 16.4.\r\n\r\nThe only thing in your CHANGELOG about this *breaking* change is:\r\n\r\n> Properly call getDerivedStateFromProps() regardless of the reason for re-rendering. (@acdlite in #12600 and #12802)\r\n\r\nPlease revert this change and save it for 17.0.0, or provide proper documentation to what this change actually entails so that its use can be adjusted by those who have already implemented `getDerivedStateFromProps`."},{"url":"https://api.github.com/repos/facebook/react/issues/11189","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/11189/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/11189/comments","events_url":"https://api.github.com/repos/facebook/react/issues/11189/events","html_url":"https://github.com/facebook/react/issues/11189","id":264460709,"node_id":"MDU6SXNzdWUyNjQ0NjA3MDk=","number":11189,"title":"Need a hook for hydration mismatch","user":{"login":"redonkulus","id":193272,"node_id":"MDQ6VXNlcjE5MzI3Mg==","avatar_url":"https://avatars0.githubusercontent.com/u/193272?v=4","gravatar_id":"","url":"https://api.github.com/users/redonkulus","html_url":"https://github.com/redonkulus","followers_url":"https://api.github.com/users/redonkulus/followers","following_url":"https://api.github.com/users/redonkulus/following{/other_user}","gists_url":"https://api.github.com/users/redonkulus/gists{/gist_id}","starred_url":"https://api.github.com/users/redonkulus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/redonkulus/subscriptions","organizations_url":"https://api.github.com/users/redonkulus/orgs","repos_url":"https://api.github.com/users/redonkulus/repos","events_url":"https://api.github.com/users/redonkulus/events{/privacy}","received_events_url":"https://api.github.com/users/redonkulus/received_events","type":"User","site_admin":false},"labels":[{"id":710332294,"node_id":"MDU6TGFiZWw3MTAzMzIyOTQ=","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Server%20Rendering","name":"Component: Server Rendering","color":"d4c5f9","default":false},{"id":121709921,"node_id":"MDU6TGFiZWwxMjE3MDk5MjE=","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request","name":"Type: Feature Request","color":"c7def8","default":false}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2017-10-11T05:22:33Z","updated_at":"2018-06-07T20:34:06Z","closed_at":"2018-01-02T15:26:40Z","author_association":"NONE","body":"**Do you want to request a *feature* or report a *bug*?**\r\nfeature\r\n\r\n**What is the current behavior?**\r\nIn React 16, the `data-react-checksum` attribute was removed from the server rendered markup. In previous versions, we used this attribute to beacon checksum mismatches to our log servers to be notified of production issues. With the attribute removed, we have no mechanism to determine if a checksum mismatch occurred.\r\n\r\nI'm aware that checksum issues no longer cause the entire DOM to re-render, however, it is still important that we know when they do occur. A typical use case is when we display ads or autoplay video. We want to know if an ad gets re-rendered (double counted) or an autoplay video is interrupted due to React re-rendering the DOM.\r\n\r\nOther related bugs/requests:\r\n- Ability to debug checksums in production - https://github.com/facebook/react/issues/10016\r\n\r\n**What is the expected behavior?**\r\nThe solution does not necessarily need to re-introduce the checksum attribute again. It could be some other event, hook, or callback that applications can leverage to handle checksum issues.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n- React 16\r\n- All browsers\r\n- Worked in  <= React 15\r\n"}],"status":200,"statusText":"OK","headers":{"x-ratelimit-remaining":"58","etag":"W/\"4edda6fc8a51e3fd42bdb0eeb7d32d60\"","content-type":"application/json; charset=utf-8","cache-control":"public, max-age=60, s-maxage=60","x-ratelimit-reset":"1528544584","x-ratelimit-limit":"60","link":"<https://api.github.com/repositories/10270250/issues?since=2018-06-02T10%3A44%3A08.125Z&sort=updated&state=all&page=2>; rel=\"next\", <https://api.github.com/repositories/10270250/issues?since=2018-06-02T10%3A44%3A08.125Z&sort=updated&state=all&page=4>; rel=\"last\""},"config":{"transformRequest":{},"transformResponse":{},"timeout":0,"xsrfCookieName":"XSRF-TOKEN","xsrfHeaderName":"X-XSRF-TOKEN","maxContentLength":-1,"headers":{"Accept":"application/json, text/plain, */*"},"method":"get","params":{"since":"2018-06-02T10:44:08.125Z","sort":"updated","state":"all"},"url":"https://api.github.com/repos/facebook/react/issues"},"request":{}});
    }

    render() {
        return (
            <div>
                <Header />
                {this.state.issues.length ? 
                    <IssuesList issues={this.state.issues} />
                    :
                    <Loader />
                }
            </div>
        );
    }
}

export default App;
